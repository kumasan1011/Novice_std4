#ifndef _EVALUATE_H_
#define _EVALUATE_H_


int PieceOnlyVal[]={ 0,100,200,220,300,350,600,700,15000,240,290,300,350,0,800,950 };

int PieceVal_B[]= { 0, 87,232,257,369,444,569,642,15000,534,489,510,495,0,827,945 };
int PieceVal[]  = { 0, 90,315,405,495,540,855,990,15000,540,540,540,540,0,945,1395 };
int PieceHandVal_B[]={ 0, 87,232,257,369,444,569,642 };
int PieceHandVal[]  = { 0, 90,315,405,495,540,855,990 };
int RankBonus[]={ 0, 0, 0, 0, 150, 450, 900,1300,1550,1600 };


static const struct {
		int f_pt, e_pt;
	} base_tbl[] = {
		{-1      , -1      },	//  0:---
		{f_pawn  , e_pawn  },	//  1:SFU
		{f_lance , e_lance },	//  2:SKY
		{f_knight, e_knight},	//  3:SKE
		{f_silver, e_silver},	//  4:SGI
		{f_gold  , e_gold  },	//  5:SKI
		{f_bishop, e_bishop},	//  6:SKA
		{f_rook  , e_rook  },	//  7:SHI
		{-1      , -1      },	//  8:SOU
		{f_gold  , e_gold  },	//  9:STO
		{f_gold  , e_gold  },	// 10:SNY
		{f_gold  , e_gold  },	// 11:SNK
		{f_gold  , e_gold  },	// 12:SNG
		{-1      , -1      },	// 13:--
		{f_horse , e_horse },	// 14:SUM
		{f_dragon, e_dragon},	// 15:SRY
		{e_pawn  , f_pawn  },	// 16:GFU
		{e_lance , f_lance },	// 17:GKY
		{e_knight, f_knight},	// 18:GKE
		{e_silver, f_silver},	// 19:GGI
		{e_gold  , f_gold  },	// 20:GKI
		{e_bishop, f_bishop},	// 21:GKA
		{e_rook  , f_rook  },	// 22:GHI
		{-1      , -1      },	// 23:GOU
		{e_gold  , f_gold  },	// 24:GTO
		{e_gold  , f_gold  },	// 25:GNY
		{e_gold  , f_gold  },	// 26:GNK
		{e_gold  , f_gold  },	// 27:GNG
		{-1      , -1      },	// 28:---
		{e_horse , f_horse },	// 29GUM
		{e_dragon, f_dragon}	// 30:GRY
};



const short z2sq[] = //変換用テーブル 
{
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		-1, 72, 63, 54, 45, 36, 27, 18,  9,  0, -1, -1, -1, -1, -1, -1,
		-1, 73, 64, 55, 46, 37, 28, 19, 10,  1, -1, -1, -1, -1, -1, -1,
		-1, 74, 65, 56, 47, 38, 29, 20, 11,  2, -1, -1, -1, -1, -1, -1,
		-1, 75, 66, 57, 48, 39, 30, 21, 12,  3, -1, -1, -1, -1, -1, -1,
		-1, 76, 67, 58, 49, 40, 31, 22, 13,  4, -1, -1, -1, -1, -1, -1,
		-1, 77, 68, 59, 50, 41, 32, 23, 14,  5, -1, -1, -1, -1, -1, -1,
		-1, 78, 69, 60, 51, 42, 33, 24, 15,  6, -1, -1, -1, -1, -1, -1,
		-1, 79, 70, 61, 52, 43, 34, 25, 16,  7, -1, -1, -1, -1, -1, -1,
		-1, 80, 71, 62, 53, 44, 35, 26, 17,  8, -1, -1, -1, -1, -1, -1,
};

/*
const short z2sq[] = //変換用テーブル 
{
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		-1,  0,  1,  2,  3,  4,  5,  6,  7,  8, -1, -1, -1, -1, -1, -1,
		-1,  9, 10, 11, 12, 13, 14, 15, 16, 17, -1, -1, -1, -1, -1, -1,
		-1, 18, 19, 20, 21, 22, 23, 24, 25, 26, -1, -1, -1, -1, -1, -1,
		-1, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1, -1,
		-1, 36, 37, 38, 39, 40, 41, 42, 43, 44, -1, -1, -1, -1, -1, -1,
		-1, 45, 46, 47, 48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1, -1,
		-1, 54, 55, 56, 57, 58, 59, 60, 61, 62, -1, -1, -1, -1, -1, -1,
		-1, 63, 64, 65, 66, 67, 68, 69, 70, 71, -1, -1, -1, -1, -1, -1,
		-1, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1, -1, -1, -1,
};
*/
int evaluate( struct Position *ptree );

#endif //_EVALUATE_H_